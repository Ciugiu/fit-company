openapi: 3.0.3
info:
  title: Fit Company API
  version: 1.0.0
  description: API documentation for the Fit Company monolith and coach microservice.

servers:
  - url: http://localhost:5000
    description: Monolith
  - url: http://localhost:5001
    description: Coach Service

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        role:
          type: string
    UserProfile:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        weight:
          type: number
        height:
          type: number
        fitness_goal:
          type: string
        onboarded:
          type: string
    Token:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        onboarded:
          type: string
    Exercise:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        difficulty:
          type: integer
        equipment:
          type: string
        instructions:
          type: string
        muscle_groups:
          type: array
          items:
            $ref: '#/components/schemas/MuscleGroup'
    MuscleGroup:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        body_part:
          type: string
        description:
          type: string
    ExerciseHistory:
      type: object
      properties:
        id:
          type: integer
        exercise_id:
          type: integer
        performed_at:
          type: string
          format: date-time
    WodRequest:
      type: object
      properties:
        email:
          type: string
      required:
        - email
    WodResponse:
      type: object
      properties:
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/Exercise'
        generated_at:
          type: string
          format: date-time

security:
  - bearerAuth: []

paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Service is up

  /users:
    post:
      summary: Create a user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      summary: List all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /bootstrap/admin:
    post:
      summary: Bootstrap admin user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Admin created

  /profile/onboarding:
    post:
      summary: Onboard user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: Profile updated

  /profile:
    get:
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /oauth/token:
    post:
      summary: Login and get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

  /fitness/exercises:
    get:
      summary: List all exercises or filter by muscle group
      parameters:
        - in: query
          name: muscle_group_id
          schema:
            type: integer
          required: false
          description: Filter by muscle group ID
      responses:
        '200':
          description: List of exercises
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exercise'

  /fitness/exercises/{exercise_id}:
    get:
      summary: Get exercise by ID
      parameters:
        - in: path
          name: exercise_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Exercise details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'

  /fitness/wod:
    get:
      summary: Get WOD (Workout of the Day)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: WOD response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WodResponse'

  /fitness/exercise-history:
    get:
      summary: Get user's exercise history
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Exercise history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExerciseHistory'

  /api/generate-wod:
    post:
      summary: Proxy to coach service to generate WOD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WodRequest'
      responses:
        '200':
          description: WOD response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WodResponse'

  /api/users/{user_id}/history:
    get:
      summary: Get user's exercise history (for coach service)
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
        - in: query
          name: day
          schema:
            type: string
          required: false
          description: Specify 'yesterday' to get only yesterday's exercises
      responses:
        '200':
          description: Exercise history
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - type: integer
                    - $ref: '#/components/schemas/ExerciseHistory'

  /generate-wod:
    post:
      summary: Generate WOD (Coach service)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WodRequest'
      responses:
        '200':
          description: WOD response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WodResponse'